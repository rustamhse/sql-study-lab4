INSERT INTO "ВОДИТЕЛЬ" VALUES
(001, 'Горбунов', 'АТП1', 5),
(002,'Попов','МП "ФорТУНА"',0),
(003,'Денисов','АО "Автотранс"',10),
(004,'Сергеев','АО "Автотранс"',10),
(005,'Левкин','АТП1',5);

INSERT INTO "ЦЕНТР ОБСЛУЖИВАНИЯ" VALUES
('001', 'Окружная дорога1', 'АТП1', '3'),
('002', 'Окружная дорога2', 'АТП1', '3'),
('003', '123КМ', 'АО "Автотранс"', '2'),
('004', 'АЗС12', 'АО "ФорТУНА"', '4'),
('005', 'АЗС7', 'АТП1', '3'),
('006', 'У поворота', 'АО "ФорТУНА"', '4');

INSERT INTO "ПРЕЙСКУРАНТ" VALUES
('001', 'Бензин АИ-72', '9000', 'АТП1', '10000'),
('002', 'Бензин АИ-96', '10000', 'АТП1', '12000'),
('003', 'Масло моторное МТ23-12', '7000', 'АО "ФорТУНА"', '7000'),
('004', 'Масло моторное УММ-23Т', '18500', 'АО "Автотранс"', '5300'),
('005', 'Свеча зажигания', '22000', 'АО "Автотранс"', '200'),
('006', 'Прокладка', '6000', 'АТП1', '500'),
('007', 'Жидкость смывная', '12000', 'АО "ФорТУНА"', '100');

INSERT INTO "ЗАКАЗ" VALUES
('12201', 'Январь', '002', '004', '007', '4', '48000'),
('12202', 'Январь', '003', '005', '007', '4', '48000'),
('12203', 'Январь', '003', '005', '007', '6', '72000'),
('12204', 'Февраль', '003', '003', '004', '2', '37000'),
('12205', 'Февраль', '004', '002', '001', '40', '360000'),
('12206', 'Февраль', '004', '001', '001', '40', '360000'),
('12207', 'Март', '003', '001', '001', '20', '180000'),
('12208', 'Апрель', '002', '004', '003', '10', '70000'),
('12209', 'Апрель', '003', '003', '006', '4', '24000'),
('12210', 'Май', '001', '002', '006', '2', '12000'),
('12211', 'Май', '003', '006', '003', '2', '14000'),
('12212', 'Июнь', '005', '004', '007', '10', '120000'),
('12213', 'Июль', '003', '004', '004', '10', '185000'),
('12214', 'Июль', '005', '004', '002', '6', '60000'),
('12215', 'Август', '002', '006', '005', '4', '88000'),
('12216', 'Сентябрь', '001', '004', '005', '6', '132000'),
('12217', 'Сентябрь', '003', '001', '007', '40', '360000');

INSERT INTO "КАЛЕНДАРЬ" VALUES
('Январь', 1),
('Февраль', 2),
('Март', 3),
('Апрель', 4),
('Май', 5),
('Июнь', 6),
('Июль', 7),
('Август', 8),
('Сентябрь', 9),
('Октябрь', 10),
('Ноябрь', 11),
('Декабрь', 12);





CREATE OR REPLACE FUNCTION last_shipment (int)
RETURNS table(ВОДИТЕЛЬ int, ФАМИЛИЯ varchar(50), ДАТА varchar(10), "МЕСТО (?)" varchar(50), ТОВАР text) AS
$$ 
BEGIN
  return query SELECT ЗАКАЗ.ВОДИТЕЛЬ, ВОДИТЕЛЬ.ФАМИЛИЯ, КАЛЕНДАРЬ.МЕСЯЦ, "ЦЕНТР ОБСЛУЖИВАНИЯ".НАЗВАНИЕ "МЕСТО (?)", ПРЕЙСКУРАНТ.ТОВАР
  FROM ЗАКАЗ
  JOIN КАЛЕНДАРЬ ON ЗАКАЗ.ДАТА = КАЛЕНДАРЬ.МЕСЯЦ
  JOIN ВОДИТЕЛЬ ON ВОДИТЕЛЬ.ИДЕНТИФИКАТОР = ЗАКАЗ.ВОДИТЕЛЬ
  JOIN "ЦЕНТР ОБСЛУЖИВАНИЯ" ON "ЦЕНТР ОБСЛУЖИВАНИЯ".ВЛАДЕЛЕЦ = ВОДИТЕЛЬ.АВТОПРЕДПРИЯТИЕ
  JOIN ПРЕЙСКУРАНТ ON ЗАКАЗ."ТОВАР ПО ПРЕЙСКУРАНТУ" = ПРЕЙСКУРАНТ.ИДЕНТИФИКАТОР
  WHERE ЗАКАЗ.ВОДИТЕЛЬ = $1
  ORDER BY КАЛЕНДАРЬ."ПОРЯДКОВЫЙ НОМЕР" DESC
  LIMIT 1;

  IF NOT FOUND THEN
    RAISE EXCEPTION 'Водитель с идентификатором % не найден!', $1;
  END IF;
  
  return;
END
$$ LANGUAGE plpgsql;

select * from last_shipment(3)





CREATE TABLE "ДОСТУПНЫЕ ВОДИТЕЛИ"(
	ИДЕНТИФИКАТОР int CHECK (ИДЕНТИФИКАТОР > 0),
	ФАМИЛИЯ varchar (50),
	"ИДЕНТИФИКАТОР АВТОПРЕДПРИЯТИЯ" int CHECK ("ИДЕНТИФИКАТОР АВТОПРЕДПРИЯТИЯ" > 0),
	АВТОПРЕДПРИЯТИЕ varchar (50));

INSERT INTO "ДОСТУПНЫЕ ВОДИТЕЛИ"
SELECT ВОДИТЕЛЬ.ИДЕНТИФИКАТОР, ВОДИТЕЛЬ.ФАМИЛИЯ, "ЦЕНТР ОБСЛУЖИВАНИЯ".ИДЕНТИФИКАТОР, "ЦЕНТР ОБСЛУЖИВАНИЯ".НАЗВАНИЕ
FROM ВОДИТЕЛЬ
JOIN "ЦЕНТР ОБСЛУЖИВАНИЯ" ON "ЦЕНТР ОБСЛУЖИВАНИЯ".ВЛАДЕЛЕЦ = ВОДИТЕЛЬ.АВТОПРЕДПРИЯТИЕ;

SELECT * FROM "ДОСТУПНЫЕ ВОДИТЕЛИ";

CREATE OR REPLACE FUNCTION checkAvailability()
RETURNS TRIGGER
AS 
$$
BEGIN
	PERFORM * FROM "ДОСТУПНЫЕ ВОДИТЕЛИ" 
	WHERE "ДОСТУПНЫЕ ВОДИТЕЛИ".ИДЕНТИФИКАТОР = NEW.ВОДИТЕЛЬ AND "ДОСТУПНЫЕ ВОДИТЕЛИ"."ИДЕНТИФИКАТОР АВТОПРЕДПРИЯТИЯ" = NEW."ЦЕНТР ОБСЛ.";
	IF NOT FOUND THEN
		RAISE EXCEPTION 'Указан неверный ИДЕНТИФИКАТОР ВОДИТЕЛЯ и/или ИДЕНТИФИКАТОР ПРЕДПРИЯТИЯ';
	END IF;
	RETURN NEW;
END
$$
LANGUAGE PLPGSQL;

CREATE OR REPLACE TRIGGER triggerCheckAvailability
BEFORE INSERT ON ЗАКАЗ
FOR EACH ROW EXECUTE FUNCTION checkAvailability();




INSERT INTO "ЗАКАЗ" VALUES
('12201', 'Январь', '006', '004', '007', '4', '48000');




CREATE OR REPLACE FUNCTION autoFillCost()
RETURNS TRIGGER
AS
$$
DECLARE price int;
BEGIN
	SELECT ПРЕЙСКУРАНТ.ЦЕНА INTO price FROM ПРЕЙСКУРАНТ
	WHERE ПРЕЙСКУРАНТ.ИДЕНТИФИКАТОР = NEW."ТОВАР ПО ПРЕЙСКУРАНТУ";
	
	IF NEW.ИТОГО is NULL THEN
		UPDATE ЗАКАЗ SET ИТОГО = price * NEW."КОЛ-ВО"
		WHERE "НОМЕР ВЕДОМОСТИ" = NEW."НОМЕР ВЕДОМОСТИ";
	END IF;
	RETURN NEW;
END
$$
LANGUAGE PLPGSQL;

CREATE OR REPLACE TRIGGER triggerAutoFillCost
AFTER INSERT ON ЗАКАЗ
FOR EACH ROW EXECUTE FUNCTION autoFillCost();




INSERT INTO "ЗАКАЗ" VALUES
('12218', 'Январь', '002', '004', '007', '4');

SELECT * FROM "ЗАКАЗ"




CREATE OR REPLACE VIEW customizableDriverView (ID, "ФАМИЛИЯ ВОДИТЕЛЯ", ДАТА, ЛЬГОТА, "МЕСТО РАБОТЫ", КОЛИЧЕСТВО, "СТОИМОСТЬ ЗАКАЗА") 
AS (SELECT ВОДИТЕЛЬ.ИДЕНТИФИКАТОР, ВОДИТЕЛЬ.ФАМИЛИЯ, ЗАКАЗ.ДАТА, ВОДИТЕЛЬ.ЛЬГОТА, ВОДИТЕЛЬ.АВТОПРЕДПРИЯТИЕ,
    ЗАКАЗ."КОЛ-ВО", ЗАКАЗ.ИТОГО * (100 - ВОДИТЕЛЬ.ЛЬГОТА)/100
    FROM ВОДИТЕЛЬ
    JOIN ЗАКАЗ ON ВОДИТЕЛЬ.ИДЕНТИФИКАТОР = ЗАКАЗ.ВОДИТЕЛЬ);

CREATE OR REPLACE RULE customization AS
ON UPDATE TO customizableDriverView
DO INSTEAD
UPDATE ВОДИТЕЛЬ SET ЛЬГОТА = NEW.ЛЬГОТА WHERE ИДЕНТИФИКАТОР  = NEW.ID;

SELECT * FROM customizableDriverView




UPDATE customizableDriverView SET ЛЬГОТА = 100 where customizableDriverView.ID = 1;
select * from customizableDriverView;
